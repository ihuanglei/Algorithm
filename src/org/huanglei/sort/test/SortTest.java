/**
 * 
 */
package org.huanglei.sort.test;

import java.util.Random;

import org.huanglei.sort.BubbleSort;
import org.huanglei.sort.InsertionSort;
import org.huanglei.sort.QuickSort;
import org.huanglei.sort.SelectionSort;
import org.huanglei.sort.ShellSort;
import org.huanglei.sort.Sort;
import org.huanglei.sort.annotation.SortAnnotation;
import org.junit.After;
import org.junit.Before;
import org.junit.Ignore;
import org.junit.Test;

/**
 * @author huanglei
 * 
 */
public class SortTest {

	private final static int MAX = 1000;

	private final int[] arr = { 8092, 2931, 158, 1237, 3675, 7462, 4742, 2483,
			3962, 3833, 3255, 249, 2539, 9063, 525, 5731, 1706, 5509, 7954,
			3273, 2740, 6703, 2578, 9364, 4814, 5495, 4830, 7403, 4408, 4737,
			9, 1302, 9486, 4093, 9552, 8151, 8258, 2878, 5779, 5946, 2890, 953,
			4821, 7295, 6080, 3021, 5259, 7749, 4656, 7571, 8470, 3384, 6755,
			2839, 2720, 1828, 3271, 3151, 3347, 7596, 3960, 2027, 4051, 217,
			4183, 5892, 8308, 8260, 8873, 8437, 683, 8710, 138, 393, 8170,
			9784, 5723, 9374, 3746, 4357, 1550, 5207, 5745, 5221, 6720, 6980,
			2151, 2621, 2345, 5025, 1805, 1787, 5643, 7787, 1358, 4695, 4001,
			1837, 9491, 2428, 3982, 1670, 184, 4343, 2496, 2122, 5920, 116,
			3647, 1682, 2396, 5146, 4873, 7679, 1902, 4982, 7179, 761, 4576,
			5691, 5270, 100, 8492, 3199, 4187, 3258, 6305, 3889, 2463, 1465,
			5925, 4287, 6262, 6141, 9794, 1287, 1299, 9493, 5618, 9965, 237,
			5582, 8770, 6848, 4323, 6767, 9030, 1246, 7939, 2095, 4142, 6402,
			8389, 1696, 6912, 967, 6526, 1673, 9860, 4045, 1843, 953, 9057,
			3213, 4364, 8643, 8019, 9149, 1515, 2031, 9091, 3541, 3935, 4922,
			6196, 9488, 7850, 4536, 701, 2840, 2243, 3869, 151, 3986, 2399,
			2306, 3880, 8957, 4963, 3776, 2064, 1453, 1715, 5827, 1040, 9529,
			5348, 6079, 5393, 3268, 3631, 5771, 3292, 2585, 4229, 5686, 1261,
			4802, 2804, 6999, 6654, 7042, 9891, 2439, 6965, 111, 8134, 3243,
			3467, 3118, 9905, 6152, 5029, 9147, 3368, 2264, 4406, 2973, 1214,
			6794, 1957, 8208, 6341, 9330, 1260, 8953, 3776, 6184, 6522, 7518,
			7546, 2478, 9958, 3843, 2359, 698, 8788, 4392, 7940, 9570, 6434,
			6832, 9950, 2872, 8032, 1011, 8443, 3708, 9318, 7674, 8630, 9643,
			6374, 3328, 669, 6836, 9619, 2420, 9388, 567, 7147, 8100, 893,
			2673, 3731, 4189, 5858, 4072, 158, 7777, 4501, 3120, 6428, 4542,
			9104, 393, 1164, 593, 3872, 6665, 1853, 9909, 8473, 939, 8707,
			6444, 2304, 3808, 6607, 8007, 5345, 3287, 9255, 1732, 4999, 99,
			6901, 8010, 5526, 1476, 4663, 8158, 1356, 2045, 6793, 3082, 1310,
			7170, 3439, 6689, 4099, 3790, 6487, 138, 5841, 7249, 5266, 4765,
			6970, 3783, 2215, 5782, 6062, 6634, 8185, 2190, 5298, 9630, 9769,
			1552, 7513, 7698, 989, 3074, 2022, 9471, 2425, 97, 2704, 6276,
			3726, 6145, 3844, 1196, 9548, 4797, 6508, 3365, 2173, 8695, 8105,
			7784, 5332, 475, 4883, 9176, 7651, 5441, 1216, 5349, 7690, 765,
			7494, 3269, 6980, 645, 4625, 1489, 5757, 1249, 5470, 6654, 5260,
			4665, 6493, 6139, 7603, 7962, 6719, 3872, 7461, 3768, 9190, 6284,
			3896, 828, 7144, 8348, 7266, 9031, 8778, 9341, 4277, 1785, 4457,
			4534, 7828, 3189, 2469, 7271, 4836, 4299, 5601, 4495, 489, 2202,
			3861, 1602, 2149, 51, 232, 3418, 4589, 1652, 3336, 1878, 8772,
			3907, 7734, 8709, 5869, 6103, 8217, 8059, 5299, 3284, 2742, 6283,
			5818, 6506, 9018, 9456, 4318, 5967, 1475, 2396, 6151, 3908, 3755,
			6857, 790, 4799, 4246, 8294, 6785, 6044, 5193, 9349, 9559, 4249,
			5060, 5248, 308, 1592, 7045, 4190, 362, 8654, 8830, 8979, 6577,
			7737, 6520, 4403, 7092, 1874, 9166, 183, 9290, 5013, 5171, 233,
			2905, 9332, 5907, 6632, 5808, 8720, 5253, 5865, 423, 6624, 9750,
			4368, 2858, 7772, 1430, 2141, 7512, 7928, 584, 8774, 6510, 2736,
			9992, 2503, 3491, 252, 7691, 9653, 5716, 6345, 711, 2262, 1787,
			9181, 2373, 147, 7007, 6208, 9076, 7899, 4301, 4938, 1280, 6469,
			1563, 3183, 5884, 3505, 9740, 8336, 2612, 6363, 6427, 5111, 2575,
			3483, 7735, 220, 6124, 479, 8493, 7908, 2194, 5779, 601, 6794,
			5093, 3760, 8684, 6261, 4370, 4813, 9748, 7824, 1038, 3047, 8174,
			7751, 2262, 8065, 8393, 9423, 3138, 3578, 98, 7291, 2837, 1084,
			8057, 3532, 5752, 9356, 6221, 9670, 2474, 1331, 1383, 916, 2981,
			8087, 7882, 3787, 9514, 3032, 7172, 7128, 3500, 8157, 2876, 850,
			758, 9783, 8071, 1202, 4962, 8860, 6864, 8716, 6386, 3907, 6860,
			5874, 8745, 1049, 2430, 7205, 5019, 6001, 6289, 5547, 4658, 3441,
			8642, 7610, 6929, 3262, 8092, 9163, 3091, 7503, 6869, 5893, 3206,
			4104, 5631, 4301, 9764, 8520, 8460, 9910, 3507, 7606, 5022, 4584,
			2341, 142, 9722, 9098, 9304, 7198, 8862, 5217, 120, 4800, 4476,
			5562, 4699, 8694, 8653, 9296, 9686, 8630, 8546, 8566, 8197, 1634,
			7896, 7064, 1729, 9591, 6959, 6991, 7696, 454, 1067, 7276, 9339,
			9676, 8509, 9917, 3785, 1102, 2155, 1919, 2639, 8355, 6545, 7809,
			1152, 2135, 8729, 8977, 7287, 295, 4971, 4810, 8303, 9183, 7226,
			940, 9444, 4240, 47, 3359, 5759, 4353, 6952, 3607, 6385, 1885,
			6637, 5910, 1394, 1862, 4817, 8843, 76, 7072, 712, 415, 1832, 737,
			5718, 997, 4376, 3505, 1447, 4565, 4461, 2728, 1411, 2849, 7139,
			2188, 2391, 5997, 8073, 7117, 5104, 943, 2927, 9470, 7852, 6253,
			1366, 242, 3524, 1336, 7607, 2434, 4777, 1220, 326, 9313, 4867,
			164, 9072, 3509, 5969, 3226, 7478, 9948, 9030, 8592, 2028, 9634,
			9764, 1411, 8880, 221, 7676, 7475, 8924, 4361, 8829, 8906, 9674,
			8228, 6773, 6448, 6808, 2806, 564, 181, 1311, 6449, 3305, 5989,
			1769, 4382, 3227, 2467, 9921, 6795, 2985, 9089, 7585, 8538, 4120,
			3974, 7197, 138, 750, 9965, 9573, 8577, 1305, 7163, 8728, 1793,
			1453, 1652, 8090, 127, 8374, 2874, 9247, 5806, 6933, 4622, 4631,
			9155, 7486, 4553, 4296, 8630, 9056, 6471, 7603, 9709, 4622, 5576,
			1158, 7184, 7299, 2634, 5463, 1857, 3992, 1370, 6258, 9072, 6798,
			334, 5722, 8258, 7818, 1525, 2050, 9138, 7083, 8961, 6071, 9724,
			51, 3666, 1806, 4893, 7353, 5104, 7551, 5294, 4226, 918, 2317,
			5893, 3970, 5152, 2773, 2434, 7413, 9797, 4098, 8634, 3874, 5772,
			4595, 2985, 9381, 1280, 7120, 1368, 8831, 676, 9423, 5122, 2708,
			4603, 2376, 218, 1973, 7006, 4065, 2274, 6288, 8796, 6577, 3738,
			1803, 1603, 304, 8005, 1787, 1658, 7454, 770, 6228, 112, 6668,
			9877, 3874, 4127, 9008, 8741, 305, 8537, 263, 8788, 2814, 5114,
			7280, 3484, 6990, 9771, 1963, 2324, 123, 3070, 4184, 8167, 8961,
			9881, 5087, 7556, 6672, 6588, 2745, 4014, 753, 9992, 4886, 2379,
			599, 7126, 7164, 8045, 2959, 1854, 9720, 5459, 9588, 1864, 9748,
			9812, 3515, 8512, 7721, 1071, 7081, 288, 1472, 761, 7510, 4651,
			5783, 6378, 3997, 4693, 6444, 8226, 1200, 4763, 9734, 9054, 6178,
			361, 234, 8921, 6471, 3171, 3001, 7954, 8686, 3769, 6555, 3737,
			7447, 5683, 5692, 3728, 9986, 3565, 3154, 5405, 3959, 1693, 6729,
			9609, 8554, 2677, 6691, 775, 5717, 1089, 2511, 920, 6954, 6916 };

	@Test
	@Ignore
	public void array() {

		Random random = new Random();
		for (int i = 0; i < MAX; ++i) {
			System.out.print(Math.abs(random.nextInt() % (MAX * 10)) + ",");
		}
	}

	@Before
	public void testBefort() {
	}

	@After
	public void testAfter() {
	}

	public void runTest(Sort sort) {
		long start, end;
		start = System.nanoTime();
		sort.sort(arr);
		end = System.nanoTime();
		SortAnnotation sortAnnotation = sort.getClass().getAnnotation(
				SortAnnotation.class);
		String name;
		if (sortAnnotation == null) {
			name = Sort.class.getName();
		} else {
			name = sortAnnotation.value();
		}
		System.out.println(name + " run " + (end - start) / 1000 + " ms");
		print(arr);
	}

	@Test
	public void testBubbleSort() {
		runTest(new BubbleSort());
	}

	@Test
	public void testInsertionSort() {
		runTest(new InsertionSort());
	}

	@Test
	public void testShellSort() {
		runTest(new ShellSort());
	}

	@Test
	public void testSelectionSort() {
		runTest(new SelectionSort());
	}

	@Test
	public void testQuickSort() {
		runTest(new QuickSort());
	}

	public void print(int a[]) {
		for (int i = 0; i < a.length; i++) {
			System.out.print(a[i] + " , ");
		}
		System.out.println("");
	}

}
